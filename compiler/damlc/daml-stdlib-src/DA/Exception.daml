-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

{-# LANGUAGE CPP #-}

#ifndef DAML_EXCEPTIONS

-- | HIDE
module DA.Exception where

#else

-- | Exception handling.
module DA.Exception
    ( AnyException
    , Exception (..)
    , displayException
    , ActionThrow (..)
    , throw
    , throwPure
    , ActionCatch (..)
    ) where

import DA.Record
import DA.Internal.LF

-- | General exception type.
data AnyException =
    MkAnyException () -- Opaque
        -- ^ HIDE

-- | Exception typeclass. This should not be implemented directly,
-- instead, use the `exception` syntax.
class Exception t where
    toAnyException : t -> AnyException
    fromAnyException : AnyException -> Optional t

instance Exception AnyException where
    toAnyException = identity
    fromAnyException = Some

-- | HIDE Get the error message associated with an AnyException
displayAnyException : AnyException -> Text
displayAnyException = undefined -- primitive @"anyExceptionMessage"

-- | Get the error message associated with an exception.
displayException : Exception e => e -> Text
displayException e = displayAnyException (toAnyException e)

-- | Typeclass for action that supports throwing exceptions.
class Action m => ActionThrow m where
    -- | Throw an AnyException.
    throwAny : AnyException -> m t

instance ActionThrow Update where
    throwAny e = pure () >>= \_ -> throwAnyPure e

-- | Throw an exception.
throw : (ActionThrow m, Exception e) => e -> m t
throw e = throwAny (toAnyException e)

-- | Throw an exception in pure code.
throwPure : Exception e => e -> t
throwPure e = throwAnyPure (toAnyException e)

-- | HIDE Throw an AnyException in pure code.
throwAnyPure : AnyException -> t
throwAnyPure = undefined -- primitive @"throw"

-- | Typeclass for action that supports catching exceptions.
class ActionThrow m => ActionCatch m where
    catchRaw : (() -> m t) -> (AnyException -> Optional (m t)) -> m t

instance ActionCatch Update where
    catchRaw = undefined -- magic @"catch"

#endif
